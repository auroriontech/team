{
  "name": "astro-teams",
  "type": "module",
  "version": "0.0.1",
  "scripts": {
    "dev": "astro dev --host 0.0.0.0",
    "dev:local": "npm run build && wrangler pages dev dist --local --d1=aurorion-teams --port=3000",
    "dev:full": "concurrently \"npm run dev\" \"npm run dev:local\"",
    "build": "astro build",
    "preview": "astro preview",
    "astro": "astro",
    "lint": "eslint . --ext .js,.ts,.astro",
    "lint:fix": "eslint . --ext .js,.ts,.astro --fix",
    "lint:css": "stylelint \"**/*.{css,astro}\"",
    "lint:css:fix": "stylelint \"**/*.{css,astro}\" --fix",
    "lint:all": "npm run lint && npm run lint:css",
    "audit:colors": "rg \"#[0-9a-fA-F]{3,6}\" --type-add 'astro:*.astro' --type-add 'styles:*.css' -t astro -t styles -t ts --no-heading --line-number",
    "audit:tokens": "rg \"var\\(--\" --type-add 'astro:*.astro' --type-add 'styles:*.css' -t astro -t styles -t ts --no-heading --line-number",
    "project:docs": "node scripts/generate-project-docs.js",
    "project:new": "echo 'Usage: npm run project:docs <project-slug>' && echo 'This creates documentation for an existing project in src/content/projects/'",
    "db:generate": "drizzle-kit generate",
    "db:migrate": "drizzle-kit migrate",
    "db:studio": "drizzle-kit studio",
    "db:local": "wrangler d1 execute aurorion-teams-local --local --file=./drizzle/0000_rich_network.sql",
    "db:setup": "npm run db:local && npm run db:webauthn",
    "db:webauthn": "wrangler d1 execute aurorion-teams-local --local --command=\"CREATE TABLE IF NOT EXISTS user_profiles (user_id text PRIMARY KEY, display_name text, email text UNIQUE, subscription_level text DEFAULT 'free', expires_at text, subscription_updated_at text, selected_guide_id text, preferred_language text DEFAULT 'en', first_name text, last_name text, phone_number text, enable_passkeys integer DEFAULT 1, last_passkey_login text, created_at text DEFAULT CURRENT_TIMESTAMP, updated_at text DEFAULT CURRENT_TIMESTAMP); CREATE TABLE IF NOT EXISTS webauthn_credentials (id text PRIMARY KEY, user_id text NOT NULL, credential_public_key text NOT NULL, counter integer DEFAULT 0 NOT NULL, credential_device_type text NOT NULL, credential_backed_up integer DEFAULT 0 NOT NULL, friendly_name text, user_agent text, last_used text, sign_count integer DEFAULT 0, transports text, created_at text DEFAULT CURRENT_TIMESTAMP, updated_at text DEFAULT CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES user_profiles(user_id) ON DELETE CASCADE); CREATE TABLE IF NOT EXISTS webauthn_challenges (id text PRIMARY KEY, challenge text NOT NULL UNIQUE, type text NOT NULL, user_id text, ip_address text, user_agent text, expires_at text NOT NULL, created_at text DEFAULT CURRENT_TIMESTAMP);\"",
    "dev:db": "wrangler dev --local --persist-to=./.wrangler/state",
    "test": "playwright test",
    "test:ui": "playwright test --ui",
    "test:debug": "playwright test --debug",
    "test:passkey": "playwright test passkey.spec.js"
  },
  "dependencies": {
    "@astrojs/mdx": "^4.3.0",
    "@cloudflare/workers-types": "^4.20250525.0",
    "@iconify-json/lucide": "^1.2.44",
    "@simplewebauthn/browser": "^13.1.0",
    "@simplewebauthn/server": "^13.1.1",
    "astro": "^5.8.0",
    "astro-icon": "^1.1.5",
    "drizzle-kit": "^0.31.1",
    "drizzle-orm": "^0.43.1",
    "nanoid": "^5.1.5",
    "wrangler": "^4.17.0",
    "zod": "^3.25.30"
  },
  "devDependencies": {
    "@playwright/test": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^8.33.0",
    "@typescript-eslint/parser": "^8.33.0",
    "concurrently": "^9.1.2",
    "eslint": "^9.27.0",
    "eslint-plugin-astro": "^1.3.1",
    "eslint-plugin-jsx-a11y": "^6.10.2"
  }
}
