---
/**
 * Base Layout Component
 * 
 * Provides the foundational layout structure for all pages including:
 * - HTML document structure
 * - Global styles and theme management
 * - Navigation header with theme switcher
 * - Responsive design framework
 * 
 * @props title - Page title for <title> tag
 * @props description - Meta description for SEO
 * 
 * @author Aurorion Teams Collective
 * @version 2.0.0
 */

import { Icon } from 'astro-icon/components';
import NavHeader from '../components/Navigation/NavHeader.astro';
import MobileNav from '../components/Navigation/MobileNav.astro';
import BottomNav from '../components/Navigation/BottomNav.astro';
import NavigationController from '../components/Navigation/NavigationController.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'Aurorion Teams - AI Agent Team Management' } = Astro.props;
const currentPath = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="description" content={description}>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <title>{title}</title>
  
  <!-- Preload fonts for better performance -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  
  <!-- Global styles -->
  <style>
    @import '../styles/design-system.css';
    @import '../styles/globals.css';
    
    /* Layout Structure */
    .app-body {
      display: flex;
      flex-direction: column;
      min-height: 100vh;
    }
  </style>
</head>

<body id="app-body" class="app-body">
  <!-- Navigation Components -->
  <NavHeader currentPath={currentPath} />
  <MobileNav currentPath={currentPath} />
  <BottomNav currentPath={currentPath} />
  <NavigationController />

  <!-- Main Content Area -->
  <main class="main-content">
    <div class="container">
      <slot />
    </div>
  </main>

  <!-- Footer -->
  <footer class="app-footer">
    <div class="container">
      <div class="footer-content">
        <p class="footer-text">
          Built with ❤️ by the Aurorion Teams collective
        </p>
      </div>
    </div>
  </footer>

  <style>
    /* ========================================
       CLEAN NAVIGATION STYLES
       ======================================== */
    
    .nav-header {
      background: var(--color-surface);
      border-bottom: var(--border-width) solid var(--color-border);
      position: sticky;
      top: 0;
      z-index: 1000;
      box-shadow: var(--shadow-sm);
    }
    
    .nav-container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 var(--space-6);
      display: flex;
      justify-content: space-between;
      align-items: center;
      height: 70px;
    }
    
    /* Brand */
    .nav-brand {
      display: flex;
      align-items: center;
    }
    
    .brand-link {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      text-decoration: none;
      color: inherit;
      transition: var(--transition-base);
    }
    
    .brand-link:hover {
      opacity: 0.8;
    }
    
    .brand-icon {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: linear-gradient(135deg, var(--color-primary-500), var(--color-primary-600));
      border-radius: var(--radius-lg);
      color: white;
      box-shadow: var(--shadow-md);
    }
    
    .brand-text {
      display: flex;
      flex-direction: column;
    }
    
    .nav-title {
      font-size: var(--text-xl);
      font-weight: var(--font-bold);
      color: var(--color-text);
      margin: 0;
      line-height: var(--leading-tight);
    }
    
    .nav-subtitle {
      font-size: var(--text-sm);
      color: var(--color-text-secondary);
      font-weight: var(--font-medium);
      line-height: 1;
    }
    
    /* Desktop Navigation */
    .nav-links {
      display: flex;
      align-items: center;
      gap: var(--space-2);
    }
    
    .nav-link {
      display: flex;
      align-items: center;
      gap: var(--space-2);
      padding: var(--space-3) var(--space-4);
      color: var(--color-text-secondary);
      text-decoration: none;
      font-weight: var(--font-medium);
      font-size: var(--text-sm);
      border-radius: var(--radius-lg);
      transition: var(--transition-base);
      position: relative;
    }
    
    .nav-link:hover {
      background: var(--color-surface-hover);
      color: var(--color-primary);
    }
    
    .nav-link.active {
      background: var(--color-primary);
      color: white;
      box-shadow: var(--shadow-md);
    }
    
    .nav-link svg {
      opacity: 0.7;
    }
    
    .nav-link:hover svg,
    .nav-link.active svg {
      opacity: 1;
    }
    
    /* ========================================
       MOBILE SIDEBAR STYLES
       ======================================== */
    
    .mobile-sidebar {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 9999;
      visibility: hidden;
      opacity: 0;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    .mobile-sidebar.open {
      visibility: visible;
      opacity: 1;
    }
    
    .mobile-sidebar-content {
      position: absolute;
      top: 0;
      left: 0;
      width: 320px;
      height: 100%;
      background: white;
      box-shadow: 2px 0 20px rgba(0, 0, 0, 0.15);
      transform: translateX(-100%);
      transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      display: flex;
      flex-direction: column;
    }
    
    .mobile-sidebar.open .mobile-sidebar-content {
      transform: translateX(0);
    }
    
    .sidebar-overlay {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      backdrop-filter: blur(4px);
    }
    
    .sidebar-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 1.5rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    }
    
    .sidebar-brand {
      display: flex;
      align-items: center;
      gap: 0.75rem;
    }
    
    .sidebar-brand h2 {
      margin: 0;
      font-size: 1.2rem;
      font-weight: 700;
      color: var(--text-color);
    }
    
    .sidebar-brand span {
      font-size: 0.8rem;
      color: var(--text-muted);
    }
    
    .sidebar-close {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border: none;
      background: rgba(0, 0, 0, 0.05);
      border-radius: 8px;
      cursor: pointer;
      transition: all 0.2s ease;
    }
    
    .sidebar-close:hover {
      background: rgba(239, 68, 68, 0.1);
      color: #ef4444;
    }
    
    .sidebar-nav {
      flex: 1;
      padding: 1rem;
      overflow-y: auto;
    }
    
    .sidebar-link {
      display: flex;
      align-items: center;
      gap: 1rem;
      padding: 1rem;
      text-decoration: none;
      color: var(--text-color);
      border-radius: 12px;
      transition: all 0.2s ease;
      font-weight: 500;
      margin-bottom: 0.5rem;
    }
    
    .sidebar-link:hover {
      background: rgba(59, 130, 246, 0.1);
      color: #3b82f6;
    }
    
    .sidebar-link.active {
      background: #3b82f6;
      color: white;
    }
    
    .sidebar-divider {
      height: 1px;
      background: rgba(0, 0, 0, 0.08);
      margin: 1rem 0;
    }
    
    /* ========================================
       BOTTOM NAVIGATION STYLES
       ======================================== */
    
    .bottom-nav {
      display: none;
      position: fixed;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      border-top: 1px solid rgba(0, 0, 0, 0.08);
      padding: 0.5rem;
      z-index: 100;
      box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    }
    
    .bottom-nav-item {
      display: flex;
      flex-direction: column;
      align-items: center;
      gap: 0.25rem;
      padding: 0.75rem 0.5rem;
      text-decoration: none;
      color: var(--text-muted);
      border-radius: 12px;
      transition: all 0.2s ease;
      flex: 1;
      font-size: 0.75rem;
      font-weight: 500;
    }
    
    .bottom-nav-item:hover,
    .bottom-nav-item.active {
      color: #3b82f6;
      background: rgba(59, 130, 246, 0.1);
    }
    
    .bottom-nav-icon {
      transition: transform 0.2s ease;
    }
    
    .bottom-nav-item:hover .bottom-nav-icon {
      transform: scale(1.1);
    }
    
    .bottom-nav-label {
      font-size: 0.7rem;
      line-height: 1;
    }

    /* Actions */
    .nav-actions {
      display: flex;
      align-items: center;
      gap: var(--space-3);
    }
    
    .action-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      width: 40px;
      height: 40px;
      border: none;
      background: var(--color-surface-hover);
      border-radius: var(--radius-lg);
      color: var(--color-text-secondary);
      cursor: pointer;
      transition: var(--transition-base);
    }
    
    .action-btn:hover {
      background: var(--color-primary-100);
      color: var(--color-primary);
    }
    
    /* User Menu */
    .user-menu {
      position: relative;
    }
    
    .user-btn {
      display: flex;
      align-items: center;
      gap: var(--space-2);
      padding: var(--space-2) var(--space-3);
      background: var(--color-surface-hover);
      border: none;
      border-radius: var(--radius-lg);
      color: var(--color-text);
      font-weight: var(--font-medium);
      font-size: var(--text-sm);
      cursor: pointer;
      transition: var(--transition-base);
    }
    
    .user-btn:hover {
      background: var(--color-primary-100);
      color: var(--color-primary);
    }
    
    .dropdown-arrow {
      transition: transform var(--duration-200);
    }
    
    .user-btn[aria-expanded="true"] .dropdown-arrow {
      transform: rotate(180deg);
    }
    
    .user-dropdown {
      position: absolute;
      top: calc(100% + var(--space-2));
      right: 0;
      min-width: 240px;
      background: var(--color-surface);
      border: var(--border-width) solid var(--color-border);
      border-radius: var(--radius-xl);
      box-shadow: var(--shadow-lg);
      padding: var(--space-4);
      opacity: 0;
      visibility: hidden;
      transform: translateY(-8px);
      transition: var(--transition-base);
      z-index: 1001;
    }
    
    .user-dropdown.show {
      opacity: 1;
      visibility: visible;
      transform: translateY(0);
    }
    
    .user-info {
      margin-bottom: var(--space-4);
    }
    
    .user-email {
      display: block;
      font-size: var(--text-sm);
      font-weight: var(--font-semibold);
      color: var(--color-text);
      margin-bottom: var(--space-1);
    }
    
    .user-org {
      font-size: var(--text-xs);
      color: var(--color-text-secondary);
    }
    
    .dropdown-divider {
      height: 1px;
      background: var(--color-border);
      margin: var(--space-3) 0;
    }
    
    .dropdown-link {
      display: flex;
      align-items: center;
      gap: var(--space-3);
      padding: var(--space-3);
      border-radius: var(--radius-lg);
      text-decoration: none;
      color: var(--color-text);
      font-size: var(--text-sm);
      font-weight: var(--font-medium);
      transition: var(--transition-base);
      border: none;
      background: none;
      width: 100%;
      text-align: left;
      cursor: pointer;
    }
    
    .dropdown-link:hover {
      background: var(--color-surface-hover);
      color: var(--color-primary);
    }
    
    .logout-btn {
      color: var(--color-error) !important;
    }
    
    .logout-btn:hover {
      background: var(--color-error-50) !important;
      color: var(--color-error-700) !important;
    }
    
    /* Guest Menu */
    .btn-primary {
      padding: var(--space-3) var(--space-5);
      background: var(--color-primary);
      color: white;
      text-decoration: none;
      border-radius: var(--radius-lg);
      font-weight: var(--font-semibold);
      font-size: var(--text-sm);
      transition: var(--transition-base);
    }
    
    .btn-primary:hover {
      background: var(--color-primary-hover);
      transform: translateY(-1px);
      box-shadow: var(--shadow-md);
    }
    
    /* Mobile Toggle */
    .mobile-toggle {
      display: none;
      flex-direction: column;
      justify-content: center;
      width: 40px;
      height: 40px;
      background: none;
      border: none;
      cursor: pointer;
      padding: 0;
      gap: 3px;
    }
    
    .hamburger-line {
      width: 20px;
      height: 2px;
      background: var(--color-text);
      border-radius: 1px;
      transition: var(--transition-base);
      transform-origin: center;
    }
    
    .mobile-toggle.active .hamburger-line:nth-child(1) {
      transform: rotate(45deg) translate(5px, 5px);
    }
    
    .mobile-toggle.active .hamburger-line:nth-child(2) {
      opacity: 0;
    }
    
    .mobile-toggle.active .hamburger-line:nth-child(3) {
      transform: rotate(-45deg) translate(5px, -5px);
    }
    
    /* ========================================
       MOBILE NAVIGATION
       ======================================== */
    
    .mobile-nav {
      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100vh;\n      z-index: 9999;\n      visibility: hidden;\n      opacity: 0;\n      transition: var(--transition-base);\n    }\n    \n    .mobile-nav.open {\n      visibility: visible;\n      opacity: 1;\n    }\n    \n    .mobile-nav-backdrop {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(0, 0, 0, 0.5);\n      backdrop-filter: blur(4px);\n    }\n    \n    .mobile-nav-panel {\n      position: absolute;\n      top: 0;\n      right: 0;\n      width: min(85vw, 380px);\n      height: 100%;\n      background: var(--color-surface);\n      box-shadow: var(--shadow-2xl);\n      transform: translateX(100%);\n      transition: transform var(--duration-300) var(--ease-out);\n      display: flex;\n      flex-direction: column;\n      overflow: hidden;\n    }\n    \n    .mobile-nav.open .mobile-nav-panel {\n      transform: translateX(0);\n    }\n    \n    /* Mobile Header */\n    .mobile-header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: var(--space-6);\n      border-bottom: var(--border-width) solid var(--color-border);\n    }\n    \n    .mobile-brand {\n      display: flex;\n      align-items: center;\n      gap: var(--space-3);\n    }\n    \n    .mobile-brand svg {\n      color: var(--color-primary);\n    }\n    \n    .mobile-brand h2 {\n      margin: 0;\n      font-size: var(--text-lg);\n      font-weight: var(--font-bold);\n      color: var(--color-text);\n    }\n    \n    .mobile-brand span {\n      font-size: var(--text-xs);\n      color: var(--color-text-secondary);\n      font-weight: var(--font-medium);\n    }\n    \n    .mobile-close {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 40px;\n      height: 40px;\n      border: none;\n      background: var(--color-surface-hover);\n      border-radius: var(--radius-lg);\n      color: var(--color-text-secondary);\n      cursor: pointer;\n      transition: var(--transition-base);\n    }\n    \n    .mobile-close:hover {\n      background: var(--color-error-50);\n      color: var(--color-error);\n    }\n    \n    /* Mobile Stats */\n    .mobile-stats {\n      display: grid;\n      grid-template-columns: repeat(3, 1fr);\n      gap: var(--space-4);\n      padding: var(--space-6);\n      border-bottom: var(--border-width) solid var(--color-border);\n    }\n    \n    .stat {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: var(--space-2);\n      padding: var(--space-4);\n      background: var(--color-surface-secondary);\n      border-radius: var(--radius-lg);\n      transition: var(--transition-base);\n    }\n    \n    .stat:hover {\n      background: var(--color-primary-50);\n    }\n    \n    .stat svg {\n      color: var(--color-primary);\n    }\n    \n    .stat-value {\n      font-size: var(--text-lg);\n      font-weight: var(--font-bold);\n      color: var(--color-text);\n      line-height: 1;\n    }\n    \n    .stat-label {\n      font-size: var(--text-xs);\n      color: var(--color-text-secondary);\n      font-weight: var(--font-medium);\n      text-transform: uppercase;\n      letter-spacing: 0.5px;\n    }\n    \n    /* Mobile Navigation Links */\n    .mobile-nav-links {\n      flex: 1;\n      padding: var(--space-6);\n      overflow-y: auto;\n    }\n    \n    .mobile-nav-link {\n      display: flex;\n      align-items: center;\n      gap: var(--space-4);\n      padding: var(--space-4);\n      text-decoration: none;\n      color: var(--color-text);\n      font-weight: var(--font-medium);\n      border-radius: var(--radius-lg);\n      transition: var(--transition-base);\n      margin-bottom: var(--space-2);\n    }\n    \n    .mobile-nav-link:hover {\n      background: var(--color-surface-hover);\n      color: var(--color-primary);\n    }\n    \n    .mobile-nav-link.active {\n      background: var(--color-primary-100);\n      color: var(--color-primary);\n    }\n    \n    .mobile-nav-link svg:first-child {\n      color: var(--color-text-secondary);\n      transition: var(--transition-base);\n    }\n    \n    .mobile-nav-link:hover svg:first-child,\n    .mobile-nav-link.active svg:first-child {\n      color: var(--color-primary);\n    }\n    \n    .mobile-nav-link span {\n      flex: 1;\n    }\n    \n    .nav-badge {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      min-width: 24px;\n      height: 24px;\n      padding: 0 var(--space-2);\n      background: var(--color-primary);\n      color: white;\n      font-size: var(--text-xs);\n      font-weight: var(--font-semibold);\n      border-radius: var(--radius-full);\n    }\n    \n    .nav-status {\n      width: 8px;\n      height: 8px;\n      border-radius: var(--radius-full);\n      background: var(--color-neutral-300);\n    }\n    \n    .nav-status.active {\n      background: var(--color-success);\n      box-shadow: 0 0 0 2px var(--color-success-100);\n    }\n    \n    .nav-divider {\n      height: 1px;\n      background: var(--color-border);\n      margin: var(--space-4) 0;\n    }\n    \n    /* Mobile Footer */\n    .mobile-footer {\n      padding: var(--space-6);\n      border-top: var(--border-width) solid var(--color-border);\n      background: var(--color-surface-secondary);\n    }\n    \n    .mobile-action-btn {\n      display: flex;\n      align-items: center;\n      gap: var(--space-3);\n      width: 100%;\n      padding: var(--space-4);\n      background: var(--color-surface);\n      border: var(--border-width) solid var(--color-border);\n      border-radius: var(--radius-lg);\n      color: var(--color-text);\n      font-weight: var(--font-medium);\n      cursor: pointer;\n      transition: var(--transition-base);\n      margin-bottom: var(--space-4);\n    }\n    \n    .mobile-action-btn:hover {\n      background: var(--color-primary-100);\n      border-color: var(--color-primary);\n      color: var(--color-primary);\n    }\n    \n    .mobile-version {\n      font-size: var(--text-xs);\n      color: var(--color-text-muted);\n      text-align: center;\n      font-weight: var(--font-medium);\n    }
    
    /* ========================================
       RESPONSIVE DESIGN
       ======================================== */
    
    @media (max-width: 768px) {
      .desktop-nav {
        display: none;
      }
      
      .mobile-menu-toggle {
        display: flex;
      }
      
      .bottom-nav {
        display: flex;
      }
      
      .main-content {
        padding-bottom: calc(80px + var(--space-4)); /* Account for bottom nav */
      }
      
      .app-footer {
        padding-bottom: calc(var(--space-6) + 80px); /* Account for bottom nav */
      }
      
      .nav-container {
        padding: 0 1rem;
      }
      
      .nav-actions {
        gap: 0.5rem;
      }
      
      .action-btn {
        width: 40px;
        height: 40px;
      }
      
      .user-avatar {
        padding: 0.5rem;
      }
      
      .user-name {
        display: none;
      }
      
      .user-dropdown {
        right: -1rem;
        left: -1rem;
        width: auto;
        min-width: auto;
      }
    }
    
    @media (max-width: 480px) {
      .nav-title {
        font-size: 1.2rem;
      }
      
      .nav-subtitle {
        font-size: 0.7rem;
      }
      
      .sidebar-panel {
        width: 85vw;
        max-width: 320px;
      }
      
      .quick-stats {
        grid-template-columns: 1fr;
        gap: 0.5rem;
        padding: 1rem;
      }
      
      .brand-section {
        gap: 0.75rem;
      }
      
      .brand-icon-wrapper {
        width: 40px;
        height: 40px;
      }
      
      .bottom-nav {
        padding: 0.75rem 0.5rem;
        padding-bottom: env(safe-area-inset-bottom, 0.75rem);
      }
      
      .bottom-nav-label {
        font-size: 0.65rem;
      }
      
      .nav-container {
        height: 64px;
        padding: 0 1rem;
      }
      
      .mobile-menu-toggle {
        width: 48px;
        height: 48px;
      }
      
      .item-content {
        padding: 0.875rem;
      }
    }
    
    /* iPhone and iOS specific optimizations */
    @media (max-width: 430px) { /* iPhone 14 Pro Max and similar */
      .sidebar-panel {
        width: 90vw;
        max-width: 380px;
      }
      
      .sidebar-header {
        padding: 1.5rem 1rem 1rem;
      }
      
      .sidebar-footer {
        padding: 1rem;
      }
    }
    
    @media (max-width: 390px) { /* iPhone 14 Pro */
      .sidebar-panel {
        width: 92vw;
        max-width: 350px;
      }
    }
    
    @media (max-width: 375px) { /* iPhone SE and smaller */
      .sidebar-panel {
        width: 95vw;
        max-width: 320px;
      }
      
      .brand-title {
        font-size: 1.1rem;
      }
      
      .brand-subtitle {
        font-size: 0.8rem;
      }
      
      .quick-stats {
        padding: 0.75rem;
      }
      
      .footer-actions {
        gap: 0.5rem;
      }
    }
    
    /* Support for devices with rounded corners and safe areas */
    @supports (padding: max(0px)) {
      .future-sidebar {
        padding-top: env(safe-area-inset-top, 0);
      }
      
      .bottom-nav {
        padding-bottom: max(0.75rem, env(safe-area-inset-bottom));
      }
      
      .main-content {
        padding-bottom: calc(80px + var(--space-4) + max(0px, env(safe-area-inset-bottom)));
      }
      
      .app-footer {
        padding-bottom: calc(var(--space-6) + 80px + max(0px, env(safe-area-inset-bottom)));
      }
    }
    
    /* Touch device optimizations */
    .touch-device .nav-item {
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);
      -webkit-touch-callout: none;
      -webkit-user-select: none;
      user-select: none;
    }
    
    .touch-device .action-button,
    .touch-device .mobile-menu-toggle,
    .touch-device .close-button {
      -webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);
      min-height: 44px;
      min-width: 44px;
    }
    
    /* iOS Safari specific fixes */
    @supports (-webkit-touch-callout: none) {
      .sidebar-panel {
        -webkit-overflow-scrolling: touch;
      }
      
      .future-sidebar {
        -webkit-overflow-scrolling: touch;
      }
      
      .sidebar-nav {
        -webkit-overflow-scrolling: touch;
      }
    }
    
    
    /* ========================================
       MAIN CONTENT STYLES
       ======================================== */
    
    .main-content {
      flex: 1;
      padding-top: var(--space-8);
      padding-bottom: var(--space-8);
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 var(--space-6);
    }
    
    /* ========================================
       FOOTER STYLES
       ======================================== */
    
    .app-footer {
      background: var(--color-surface);
      border-top: var(--border-width) solid var(--color-border);
      padding: var(--space-6) 0;
      margin-top: auto;
    }
    
    .footer-content {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
    }
    
    .footer-text {
      color: var(--color-text-secondary);
      font-size: var(--text-sm);
      margin: 0;
    }
    
    
    /* ========================================
       PRICE IS RIGHT THEME ENHANCEMENTS
       ======================================== */
    
    .price-is-right .nav-header {
      background: var(--nav-bg);
      position: relative;
      overflow: hidden;
    }
    
    .price-is-right .nav-header::before {
      content: '🎉🎊🎈';
      position: absolute;
      top: 10px;
      right: 20px;
      font-size: 1.5rem;
      animation: bounce 1.5s infinite;
    }
    
    .price-is-right .nav-logo {
      animation: sparkle 2s infinite;
    }
    
    .price-is-right .theme-toggle {
      border: 3px solid #ffd700;
      box-shadow: 0 0 20px rgba(255, 215, 0, 0.3);
    }
    
    /* ========================================
       FUTURE SIDEBAR ANIMATIONS & DARK THEME
       ======================================== */
    
    @keyframes pulse {
      0%, 100% {
        opacity: 1;
      }
      50% {
        opacity: 0.5;
      }
    }
    
    /* Dark theme support */
    .dark-theme .future-sidebar .sidebar-panel {
      background: rgba(17, 24, 39, 0.95);
      border-right: 1px solid rgba(55, 65, 81, 0.3);
    }
    
    .dark-theme .future-sidebar .sidebar-header {
      background: linear-gradient(135deg, rgba(55, 65, 81, 0.1) 0%, rgba(31, 41, 55, 0.05) 100%);
      border-bottom-color: rgba(55, 65, 81, 0.3);
    }
    
    .dark-theme .future-sidebar .brand-title,
    .dark-theme .future-sidebar .item-title {
      color: #f9fafb;
    }
    
    .dark-theme .future-sidebar .brand-subtitle,
    .dark-theme .future-sidebar .item-subtitle,
    .dark-theme .future-sidebar .section-title,
    .dark-theme .future-sidebar .stat-label,
    .dark-theme .future-sidebar .version-label {
      color: #d1d5db;
    }
    
    .dark-theme .future-sidebar .stat-item {
      background: rgba(55, 65, 81, 0.5);
      border-color: rgba(75, 85, 99, 0.3);
    }
    
    .dark-theme .future-sidebar .stat-value {
      color: #f9fafb;
    }
    
    .dark-theme .future-sidebar .icon-wrapper {
      background: rgba(55, 65, 81, 0.5);
    }
    
    .dark-theme .future-sidebar .action-button.secondary {
      background: rgba(55, 65, 81, 0.5);
      color: #d1d5db;
      border-color: rgba(75, 85, 99, 0.3);
    }
    
    .dark-theme .future-sidebar .footer-info {
      border-top-color: rgba(55, 65, 81, 0.3);
    }
    
    .dark-theme .future-sidebar .close-button {
      background: rgba(55, 65, 81, 0.5);
      color: #d1d5db;
    }
    
    .dark-theme .future-sidebar .sidebar-footer {
      background: rgba(31, 41, 55, 0.3);
    }
    
    /* Legacy responsive styles removed - replaced with modern mobile-first approach */
  </style>

  <!-- Theme Switcher JavaScript -->
  <script>
    /**
     * Theme Management System
     * Handles switching between Professional and Price is Right themes
     * Persists theme preference in localStorage
     */
    
    // Initialize Modern Navigation System
    const initModernNav = () => {
      // Mobile menu elements
      const mobileMenuToggle = document.getElementById('mobileMenuToggle');
      const mobileSidebar = document.getElementById('mobileSidebar');
      const sidebarClose = document.getElementById('sidebarClose');
      const sidebarOverlay = document.getElementById('sidebarOverlay');
      
      // User menu elements
      const userAvatar = document.getElementById('userAvatar');
      const userDropdown = document.getElementById('userDropdown');
      
      // Theme toggle elements
      const themeToggleBtn = document.getElementById('themeToggleBtn');
      const themeIcon = themeToggleBtn?.querySelector('.theme-icon');
      
      // Mobile menu functionality
      const toggleMobileMenu = () => {
        const isOpen = mobileSidebar?.classList.contains('open');
        if (isOpen) {
          mobileSidebar?.classList.remove('open');
          mobileMenuToggle?.classList.remove('active');
          document.body.style.overflow = '';
        } else {
          mobileSidebar?.classList.add('open');
          mobileMenuToggle?.classList.add('active');
          document.body.style.overflow = 'hidden';
        }
      };
      
      const closeMobileMenu = () => {
        mobileSidebar?.classList.remove('open');
        mobileMenuToggle?.classList.remove('active');
        document.body.style.overflow = '';
      };
      
      // User dropdown functionality
      const toggleUserDropdown = (e) => {
        e.stopPropagation();
        userDropdown?.classList.toggle('show');
      };
      
      const closeUserDropdown = () => {
        userDropdown?.classList.remove('show');
      };
      
      // Active link highlighting
      const setActiveNavLink = () => {
        const currentPath = window.location.pathname;
        const navLinks = document.querySelectorAll('.nav-link, .sidebar-link, .bottom-nav-item');
        
        navLinks.forEach(link => {
          link.classList.remove('active');
          if (link.getAttribute('href') === currentPath) {
            link.classList.add('active');
          }
        });
      };
      
      // Theme toggle functionality
      const toggleTheme = () => {
        const body = document.getElementById('app-body');
        const isDark = body?.classList.contains('dark-theme');
        
        if (isDark) {
          body?.classList.remove('dark-theme');
          themeIcon?.setAttribute('name', 'lucide:moon');
          localStorage.setItem('theme', 'light');
        } else {
          body?.classList.add('dark-theme');
          themeIcon?.setAttribute('name', 'lucide:sun');
          localStorage.setItem('theme', 'dark');
        }
      };
      
      // Initialize theme
      const initTheme = () => {
        const savedTheme = localStorage.getItem('theme');
        const body = document.getElementById('app-body');
        
        if (savedTheme === 'dark') {
          body?.classList.add('dark-theme');
          themeIcon?.setAttribute('name', 'lucide:sun');
        } else {
          themeIcon?.setAttribute('name', 'lucide:moon');
        }
      };
      
      // Event listeners
      mobileMenuToggle?.addEventListener('click', toggleMobileMenu);
      sidebarClose?.addEventListener('click', closeMobileMenu);
      sidebarOverlay?.addEventListener('click', closeMobileMenu);
      userAvatar?.addEventListener('click', toggleUserDropdown);
      themeToggleBtn?.addEventListener('click', toggleTheme);
      
      // Close dropdowns when clicking outside
      document.addEventListener('click', (e) => {
        if (!userAvatar?.contains(e.target) && !userDropdown?.contains(e.target)) {
          closeUserDropdown();
        }
      });
      
      // Handle escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
          closeMobileMenu();
          closeUserDropdown();
        }
      });
      
      // Touch event optimization for mobile
      const optimizeForMobile = () => {
        if ('ontouchstart' in window) {
          // Add touch-friendly classes
          document.body.classList.add('touch-device');
          
          // Prevent zoom on double tap for buttons
          const buttons = document.querySelectorAll('button, .nav-item, .action-button');
          buttons.forEach(button => {
            button.style.touchAction = 'manipulation';
          });
          
          // Add faster click response on mobile
          const clickableElements = document.querySelectorAll('.nav-item, button, a');
          clickableElements.forEach(element => {
            element.addEventListener('touchstart', () => {}, { passive: true });
          });
        }
      };
      
      // Initialize nav item animations
      const initNavAnimations = () => {
        const navItems = document.querySelectorAll('.nav-item');
        navItems.forEach(item => {
          item.style.transition = 'all 0.25s cubic-bezier(0.25, 0.46, 0.45, 0.94)';
          item.style.transform = 'translateX(0)';
          item.style.opacity = '1';
        });
      };
      
      // Initialize
      setActiveNavLink();
      initTheme();
      initNavAnimations();
      optimizeForMobile();
    };
    
    // Theme management (legacy support)
    const THEME_STORAGE_KEY = 'aurorion-teams-theme';
    
    // Get DOM elements
    const body = document.getElementById('app-body');
    
    // Load saved theme or default to professional
    let currentTheme = localStorage.getItem(THEME_STORAGE_KEY) || 'professional';
    
    /**
     * Apply theme to the page
     * @param theme - 'professional' or 'price-is-right'
     */
    function applyTheme(theme) {
      // Remove existing theme classes
      body.classList.remove('professional', 'price-is-right');
      
      // Add new theme class
      if (theme === 'professional') {
        body.classList.add('professional');
      } else {
        body.classList.add('price-is-right');
      }
      
      // Save theme preference
      localStorage.setItem(THEME_STORAGE_KEY, theme);
      currentTheme = theme;
      
      // Dispatch custom event for other components
      window.dispatchEvent(new CustomEvent('themeChange', { 
        detail: { theme } 
      }));
    }
    
    /**
     * Toggle between themes
     */
    function toggleTheme() {
      const newTheme = currentTheme === 'professional' ? 'price-is-right' : 'professional';
      applyTheme(newTheme);
      
      // Add celebration effect for Price is Right theme
      if (newTheme === 'price-is-right') {
        showCelebration();
      }
    }
    
    /**
     * Show celebration animation when switching to Price is Right theme
     */
    function showCelebration() {
      // Create temporary celebration element
      const celebration = document.createElement('div');
      celebration.style.cssText = `
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        font-size: 4rem;
        z-index: 1000;
        animation: celebration 2s ease-out forwards;
        pointer-events: none;
      `;
      celebration.textContent = '🎉 PRICE IS RIGHT! 🎉';
      
      // Add celebration animation
      const style = document.createElement('style');
      style.textContent = `
        @keyframes celebration {
          0% { opacity: 0; transform: translate(-50%, -50%) scale(0.5); }
          50% { opacity: 1; transform: translate(-50%, -50%) scale(1.2); }
          100% { opacity: 0; transform: translate(-50%, -50%) scale(1) translateY(-100px); }
        }
      `;
      
      document.head.appendChild(style);
      document.body.appendChild(celebration);
      
      // Clean up after animation
      setTimeout(() => {
        document.body.removeChild(celebration);
        document.head.removeChild(style);
      }, 2000);
    }
    
    // Legacy theme toggle support (if footer theme toggle exists)
    const legacyThemeToggle = document.getElementById('theme-toggle');
    if (legacyThemeToggle) {
      legacyThemeToggle.addEventListener('click', toggleTheme);
      legacyThemeToggle.addEventListener('keydown', (e) => {
        if (e.key === 'Enter' || e.key === ' ') {
          e.preventDefault();
          toggleTheme();
        }
      });
    }
    
    // Initialize theme on page load
    applyTheme(currentTheme);
    
    // Export for use by other scripts
    window.themeManager = {
      getCurrentTheme: () => currentTheme,
      setTheme: applyTheme,
      toggleTheme
    };
    
    // Initialize basic dataManager functionality
    const STORAGE_KEY = 'aurorion-teams-data';
    const STORAGE_VERSION = '1.0.0';
    
    const defaultState = {
      repositories: [],
      agentRoles: [],
      theme: 'professional'
    };
    
    const loadAppState = () => {
      try {
        const stored = localStorage.getItem(STORAGE_KEY);
        if (!stored) return defaultState;
        
        const parsed = JSON.parse(stored);
        
        // Version compatibility check
        if (parsed.version !== STORAGE_VERSION) {
          console.warn('Data version mismatch. Using default state.');
          return defaultState;
        }
        
        return { ...defaultState, ...parsed.data };
      } catch (error) {
        console.error('Failed to load app state:', error);
        return defaultState;
      }
    };
    
    const saveAppState = (state) => {
      try {
        const dataToSave = {
          version: STORAGE_VERSION,
          timestamp: new Date().toISOString(),
          data: state
        };
        
        localStorage.setItem(STORAGE_KEY, JSON.stringify(dataToSave));
        return true;
      } catch (error) {
        console.error('Failed to save app state:', error);
        return false;
      }
    };
    
    // Export dataManager globally
    window.dataManager = {
      loadAppState,
      saveAppState
    };
    
    console.log('DataManager initialized successfully');

    // Initialize authentication system
    const initializeAuth = () => {
      const userMenuElement = document.getElementById('userMenu');
      const authUserMenu = document.getElementById('authUserMenu');
      const guestMenu = document.getElementById('guestMenu');
      const userEmail = document.getElementById('userEmail');
      const userOrg = document.getElementById('userOrg');
      const logoutButton = document.getElementById('logoutButton');

      // Check for existing session
      const checkSession = () => {
        const persistentSession = localStorage.getItem('aurorion-user-session');
        const temporarySession = localStorage.getItem('aurorion-user-session-temp');
        const sessionData = persistentSession || temporarySession;

        if (sessionData) {
          try {
            const session = JSON.parse(sessionData);
            const loginTime = new Date(session.loginTime).getTime();
            const now = Date.now();
            const maxAge = session.rememberMe ? (30 * 24 * 60 * 60 * 1000) : (24 * 60 * 60 * 1000);

            // Check if session is still valid
            if ((now - loginTime) < maxAge) {
              showAuthenticatedState(session);
              return session;
            } else {
              // Session expired, clear it
              clearSession();
            }
          } catch (error) {
            console.error('Failed to parse session data:', error);
            clearSession();
          }
        }

        showGuestState();
        return null;
      };

      const showAuthenticatedState = (session) => {
        if (authUserMenu && guestMenu && userEmail) {
          authUserMenu.style.display = 'flex';
          guestMenu.style.display = 'none';
          userEmail.textContent = session.email;
          
          if (userOrg) {
            userOrg.textContent = session.organizationId ? `Org: ${session.organizationId}` : 'Personal Account';
          }

          // Update auth-required links
          updateAuthRequiredLinks(true);
        }
      };

      const showGuestState = () => {
        if (authUserMenu && guestMenu) {
          authUserMenu.style.display = 'none';
          guestMenu.style.display = 'flex';

          // Update auth-required links
          updateAuthRequiredLinks(false);
        }
      };

      const updateAuthRequiredLinks = (isAuthenticated) => {
        // Auth-required functionality now handled by user menu visibility
        // Main navigation is now public-focused
        console.log('Auth state updated:', isAuthenticated ? 'authenticated' : 'guest');
      };

      const clearSession = () => {
        localStorage.removeItem('aurorion-user-session');
        localStorage.removeItem('aurorion-user-session-temp');
        localStorage.removeItem('aurorion-auth-state');
      };

      const logout = () => {
        clearSession();
        showGuestState();
        
        // Redirect to home page
        window.location.href = '/';
      };

      // Event listeners
      if (logoutButton) {
        logoutButton.addEventListener('click', logout);
      }

      // Initialize auth state
      const currentSession = checkSession();

      // Expose auth utilities globally
      window.authUtils = {
        getCurrentSession: () => currentSession,
        isAuthenticated: () => currentSession !== null,
        logout: logout,
        checkSession: checkSession
      };
    };

    // Initialize modern navigation
    if (document.readyState === 'loading') {
      document.addEventListener('DOMContentLoaded', () => {
        initModernNav();
        initializeAuth();
      });
    } else {
      initModernNav();
      initializeAuth();
    }
  </script>
</body>
</html>