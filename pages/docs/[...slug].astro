---
/**
 * Dynamic Documentation Page
 * 
 * Renders individual documentation pages from MDX content collections
 */
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const docs = await getCollection('docs');
  
  return docs.map((doc) => ({
    params: { slug: doc.id },
    props: { doc }
  }));
}

const { doc } = Astro.props;
const { Content } = await doc.render();

// Get related docs
const allDocs = await getCollection('docs');
const relatedDocs = doc.data.relatedDocs 
  ? allDocs.filter(d => doc.data.relatedDocs.includes(d.id))
  : allDocs.filter(d => d.data.category === doc.data.category && d.id !== doc.id).slice(0, 3);

const priorityColor = {
  critical: '#dc2626',
  high: '#f59e0b', 
  medium: '#2563eb',
  low: '#6b7280'
};

const statusColor = {
  active: '#16a34a',
  draft: '#f59e0b',
  archived: '#6b7280',
  deprecated: '#dc2626'
};
---

<BaseLayout title={`${doc.data.title} | Documentation`}>
  <main class="doc-page">
    <nav class="doc-breadcrumb">
      <a href="/docs" class="breadcrumb-link">Documentation</a>
      <span class="breadcrumb-separator">›</span>
      <span class="breadcrumb-current">{doc.data.title}</span>
    </nav>

    <header class="doc-header">
      <div class="doc-title-row">
        <h1 class="doc-title">{doc.data.title}</h1>
        <div class="doc-badges">
          <span 
            class="doc-badge priority" 
            style={`background: ${priorityColor[doc.data.priority]}20; color: ${priorityColor[doc.data.priority]}`}
          >
            {doc.data.priority}
          </span>
          <span 
            class="doc-badge status"
            style={`background: ${statusColor[doc.data.status]}20; color: ${statusColor[doc.data.status]}`}
          >
            {doc.data.status}
          </span>
        </div>
      </div>
      
      <p class="doc-description">{doc.data.description}</p>
      
      <div class="doc-meta">
        <div class="meta-item">
          <span class="meta-label">Category:</span>
          <span class="meta-value">{doc.data.category}</span>
        </div>
        <div class="meta-item">
          <span class="meta-label">Last Updated:</span>
          <span class="meta-value">{new Date(doc.data.lastUpdated).toLocaleDateString()}</span>
        </div>
        {doc.data.authors && doc.data.authors.length > 0 && (
          <div class="meta-item">
            <span class="meta-label">Authors:</span>
            <span class="meta-value">{doc.data.authors.join(', ')}</span>
          </div>
        )}
      </div>
      
      {doc.data.tags.length > 0 && (
        <div class="doc-tags">
          {doc.data.tags.map(tag => (
            <span class="doc-tag" key={tag}>{tag}</span>
          ))}
        </div>
      )}
    </header>

    <div class="doc-content">
      <Content />
    </div>

    {relatedDocs.length > 0 && (
      <aside class="related-docs">
        <h3 class="related-title">Related Documentation</h3>
        <div class="related-grid">
          {relatedDocs.map((relatedDoc) => (
            <a href={`/docs/${relatedDoc.id}`} class="related-card" key={relatedDoc.id}>
              <h4 class="related-card-title">{relatedDoc.data.title}</h4>
              <p class="related-card-description">{relatedDoc.data.description}</p>
              <div class="related-card-meta">
                <span class="related-category">{relatedDoc.data.category}</span>
                <span class="related-priority" data-priority={relatedDoc.data.priority}>
                  {relatedDoc.data.priority}
                </span>
              </div>
            </a>
          ))}
        </div>
      </aside>
    )}

    <nav class="doc-navigation">
      <a href="/docs" class="nav-button back">
        <span class="nav-icon">←</span>
        Back to Documentation
      </a>
    </nav>
  </main>
</BaseLayout>

<style>
  .doc-page {
    max-width: 900px;
    margin: 0 auto;
    padding: 2rem;
  }

  .doc-breadcrumb {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 2rem;
    font-size: 0.875rem;
  }

  .breadcrumb-link {
    color: var(--color-primary);
    text-decoration: none;
  }

  .breadcrumb-link:hover {
    text-decoration: underline;
  }

  .breadcrumb-separator {
    color: var(--color-text-secondary);
  }

  .breadcrumb-current {
    color: var(--color-text-secondary);
  }

  .doc-header {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--color-border);
  }

  .doc-title-row {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 1rem;
    flex-wrap: wrap;
    gap: 1rem;
  }

  .doc-title {
    font-size: 2.5rem;
    font-weight: bold;
    color: var(--color-text);
    margin: 0;
    flex: 1;
  }

  .doc-badges {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  .doc-badge {
    font-size: 0.75rem;
    padding: 0.375rem 0.75rem;
    border-radius: 0.375rem;
    text-transform: uppercase;
    font-weight: 600;
    letter-spacing: 0.5px;
  }

  .doc-description {
    font-size: 1.125rem;
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0 0 1.5rem 0;
  }

  .doc-meta {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
    margin-bottom: 1rem;
  }

  .meta-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
  }

  .meta-label {
    color: var(--color-text-secondary);
    font-weight: 600;
  }

  .meta-value {
    color: var(--color-text);
  }

  .doc-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .doc-tag {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    padding: 0.375rem 0.75rem;
    border-radius: 0.375rem;
    font-size: 0.75rem;
    color: var(--color-text-secondary);
    text-transform: lowercase;
  }

  .doc-content {
    margin-bottom: 3rem;
  }

  /* Enhanced MDX content styling */
  .doc-content :global(h1) {
    font-size: 2rem;
    font-weight: bold;
    color: var(--color-text);
    margin: 2rem 0 1rem 0;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--color-border);
  }

  .doc-content :global(h2) {
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 1.5rem 0 0.75rem 0;
  }

  .doc-content :global(h3) {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 1.25rem 0 0.5rem 0;
  }

  .doc-content :global(p) {
    color: var(--color-text-secondary);
    line-height: 1.7;
    margin: 0 0 1rem 0;
  }

  .doc-content :global(ul),
  .doc-content :global(ol) {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin: 0 0 1rem 0;
    padding-left: 1.5rem;
  }

  .doc-content :global(li) {
    margin-bottom: 0.5rem;
  }

  .doc-content :global(code) {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', monospace;
    font-size: 0.875rem;
    color: var(--color-text);
  }

  .doc-content :global(pre) {
    background: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    padding: 1rem;
    overflow-x: auto;
    margin: 1rem 0;
  }

  .doc-content :global(pre code) {
    background: none;
    border: none;
    padding: 0;
  }

  .doc-content :global(blockquote) {
    border-left: 4px solid var(--color-primary);
    background: var(--color-surface);
    margin: 1rem 0;
    padding: 1rem 1.5rem;
    color: var(--color-text-secondary);
    font-style: italic;
  }

  .doc-content :global(table) {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;
    font-size: 0.875rem;
  }

  .doc-content :global(th),
  .doc-content :global(td) {
    border: 1px solid var(--color-border);
    padding: 0.75rem;
    text-align: left;
  }

  .doc-content :global(th) {
    background: var(--color-surface);
    font-weight: 600;
    color: var(--color-text);
  }

  .doc-content :global(td) {
    color: var(--color-text-secondary);
  }

  .related-docs {
    margin-bottom: 3rem;
    padding: 2rem;
    background: var(--color-surface);
    border-radius: var(--border-radius);
    border: 1px solid var(--color-border);
  }

  .related-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: var(--color-text);
    margin: 0 0 1.5rem 0;
  }

  .related-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
  }

  .related-card {
    background: var(--color-background);
    border: 1px solid var(--color-border);
    border-radius: var(--border-radius);
    padding: 1rem;
    text-decoration: none;
    color: var(--color-text);
    transition: all 0.2s ease;
  }

  .related-card:hover {
    border-color: var(--color-primary);
    transform: translateY(-2px);
  }

  .related-card-title {
    font-size: 0.875rem;
    font-weight: 600;
    margin: 0 0 0.5rem 0;
    color: var(--color-text);
  }

  .related-card-description {
    font-size: 0.75rem;
    color: var(--color-text-secondary);
    line-height: 1.4;
    margin: 0 0 0.75rem 0;
  }

  .related-card-meta {
    display: flex;
    justify-content: space-between;
    align-items: center;
    font-size: 0.625rem;
  }

  .related-category {
    background: var(--color-surface);
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    color: var(--color-text-secondary);
    text-transform: uppercase;
    font-weight: 600;
  }

  .related-priority {
    padding: 0.25rem 0.5rem;
    border-radius: 0.25rem;
    text-transform: uppercase;
    font-weight: 600;
  }

  .related-priority[data-priority="critical"] {
    background: rgba(239, 68, 68, 0.1);
    color: #dc2626;
  }

  .related-priority[data-priority="high"] {
    background: rgba(251, 191, 36, 0.1);
    color: #f59e0b;
  }

  .related-priority[data-priority="medium"] {
    background: rgba(59, 130, 246, 0.1);
    color: #2563eb;
  }

  .related-priority[data-priority="low"] {
    background: rgba(107, 114, 128, 0.1);
    color: #6b7280;
  }

  .doc-navigation {
    display: flex;
    justify-content: center;
    margin-top: 2rem;
  }

  .nav-button {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    background: var(--color-primary);
    color: white;
    text-decoration: none;
    border-radius: var(--border-radius);
    font-weight: 600;
    transition: all 0.2s ease;
  }

  .nav-button:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .nav-icon {
    font-size: 1rem;
  }

  @media (max-width: 768px) {
    .doc-page {
      padding: 1rem;
    }

    .doc-title {
      font-size: 2rem;
    }

    .doc-title-row {
      flex-direction: column;
      align-items: stretch;
    }

    .doc-meta {
      flex-direction: column;
      gap: 0.5rem;
    }

    .related-grid {
      grid-template-columns: 1fr;
    }
  }
</style>